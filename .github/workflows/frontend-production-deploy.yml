name: Frontend Deploy (Production)

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**" # Only trigger if frontend files changed
      - ".github/workflows/frontend-production-deploy.yml"
      - "package.json"
      - "pnpm-lock.yaml"

env:
  APP_NAME: apinest
  IMAGE_TYPE: frontend
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY: ${{ vars.REGISTRY }}
  WEBHOOK_URL: ${{ secrets.REDEPLOY_FE_WEBHOOK }}
  NEXT_PUBLIC_API_URL: ${{ vars.API_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/nabinkawan/${{ env.APP_NAME }}:${{ env.IMAGE_TYPE }}-${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/nabinkawan/${{ env.APP_NAME }}:${{ env.IMAGE_TYPE }}-latest
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/nabinkawan/${{ env.APP_NAME }}:${{ env.IMAGE_TYPE }}-buildcache
            type=gha
          cache-to: |
            type=registry,ref=${{ env.REGISTRY }}/nabinkawan/${{ env.APP_NAME }}:${{ env.IMAGE_TYPE }}-buildcache,mode=max
            type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}

      - name: Trigger Re-deployment
        if: env.WEBHOOK_URL != ''
        run: |
          curl -X POST "${{ env.WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{"service": "${{ env.APP_NAME }}", "action": "redeploy"}' \
            --fail --silent --show-error
